"use strict";(self.webpackChunkq_01_docs=self.webpackChunkq_01_docs||[]).push([[9032],{3032:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=t(7624),i=t(2172);const r={sidebar_position:4,id:"map-core-api-core-components-query-document",title:"Query Documents",sidebar_label:"Query Documents"},o="Query Documents",a={id:"products/map.q01.io/core-api/core-components/map-core-api-core-components-query-document",title:"Query Documents",description:"The core APIs offer a powerful tool for querying the database called documents.",source:"@site/docs/products/map.q01.io/core-api/core-components/query-documents.md",sourceDirName:"products/map.q01.io/core-api/core-components",slug:"/products/map.q01.io/core-api/core-components/map-core-api-core-components-query-document",permalink:"/docs/products/map.q01.io/core-api/core-components/map-core-api-core-components-query-document",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,id:"map-core-api-core-components-query-document",title:"Query Documents",sidebar_label:"Query Documents"},sidebar:"mapSidebar",previous:{title:"Query Data",permalink:"/docs/products/map.q01.io/core-api/core-components/map-core-api-core-components-query-data"},next:{title:"Get Entities",permalink:"/docs/products/map.q01.io/core-api/core-components/map-core-api-core-components-get-entities"}},d={},l=[{value:"Definition of Documents",id:"definition-of-documents",level:2},{value:"Query Pre-Defined Documents",id:"query-pre-defined-documents",level:2},{value:"Request",id:"request",level:5},{value:"Response",id:"response",level:5},{value:"Request",id:"request-1",level:5},{value:"Response",id:"response-1",level:5},{value:"Request",id:"request-2",level:5},{value:"Response",id:"response-2",level:5},{value:"Query Documents onFly",id:"query-documents-onfly",level:2},{value:"Request",id:"request-3",level:5},{value:"Response",id:"response-3",level:5},{value:"Request",id:"request-4",level:5}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"query-documents",children:"Query Documents"}),"\n",(0,s.jsx)(n.p,{children:"The core APIs offer a powerful tool for querying the database called documents."}),"\n",(0,s.jsx)(n.p,{children:'When there is a need to extract a block of coherent data from the database starting from a master table (such as an Item with all associated barcodes and price lists), it is possible to generate a new document in the dimension TB_ANAG_DOCDIM00 (useful if you want to make a document with pre-set characteristics available to others) or by invoking the generation of the document "on the fly" (all necessary information for the creation of the document must be passed in the body of the API call, which presupposes knowledge of the database structure and the relationships between the dimensions). The generated document can then be queried via API to provide all the information it references.'}),"\n",(0,s.jsx)(n.p,{children:"The advantages are several:"}),"\n",(0,s.jsx)(n.p,{children:"Only one call is necessary."}),"\n",(0,s.jsx)(n.p,{children:"The obtained data are coherent."}),"\n",(0,s.jsx)(n.p,{children:"The relationships with the related tables are metadata-driven, so simply modifying the metadata will yield the correct data in response."}),"\n",(0,s.jsx)(n.h2,{id:"definition-of-documents",children:"Definition of Documents"}),"\n",(0,s.jsx)(n.p,{children:"A document requires the definition of the following parameters"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:" Code "}),(0,s.jsx)("th",{children:" Description "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Source Dim "}),(0,s.jsx)("td",{children:" Alfanumerico unique identifier of the document "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Description "}),(0,s.jsx)("td",{children:" Document description "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Source Dim "}),(0,s.jsx)("td",{children:" The master dimension on which the query is performed and on which any filters are applied "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Key Source Dim "}),(0,s.jsx)("td",{children:" It is the field used to filter data from the master dimension. The value is passed as an argument in the API route (see the following section). "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Aggregate Dim "}),(0,s.jsxs)("td",{children:[(0,s.jsx)(n.p,{children:"JSON object with the key being the code of the aggregated dimension (i.e., pointed to by the VARS/AC/PROP fields) to be added to the document. If empty, all related dimensions will be shown according to metadata logic; otherwise, only those defined in the JSON will be shown. It is possible to specify the list of fields to display or discard for each related dimension."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "BCODE": [\n    "XBCODE03",\n    "XBCODE04"\n  ], \n  "LST":[\n    "!LST_ID" \n  ]\n}\n'})}),(0,s.jsx)(n.p,{children:'The "!" before a field means "exclude."\nIn the previous example, all fields of LST will be printed except LST_ID, while only the fields XBCODE03 and XBCODE04 will be printed.'})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Aggregate Dim Conditions "}),(0,s.jsxs)("td",{children:[(0,s.jsx)(n.p,{children:"If it is necessary to apply conditions on the join tables, these will be defined in a JSON object with the following format."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "LST":[\n    "XLST03 = \'%codLst%\'",\n    "XLST25 = \'%areaListino%\'"\n  ]\n}\n'})}),(0,s.jsx)(n.p,{children:'The values to be applied to the fields can be static or dynamic.\nIf you want to use dynamic values, simply write the values between "%%" and pass the token code as a parameter in the API call.'}),(0,s.jsx)(n.p,{children:"The system will reject calls that do not include all tokens sent via query params."})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Microservice "}),(0,s.jsx)("td",{children:" Microservice name "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Module "}),(0,s.jsx)("td",{children:" Applicative module "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" Public "}),(0,s.jsx)("td",{children:" Flag to define the public/private [default] status of the document "})]})]}),"\n",(0,s.jsx)(n.p,{children:"Let's look at some examples of documents, how to query them, and what results they return."}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:" Code "}),(0,s.jsx)("th",{children:" Description "}),(0,s.jsx)("th",{children:" Source Dim "}),(0,s.jsx)("th",{children:" Key Source Dim "}),(0,s.jsx)("th",{children:" Aggregate Dim "}),(0,s.jsx)("th",{children:" Aggregate Dim Condition "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" SHORT_ARTICLE_INFO "}),(0,s.jsx)("td",{children:" Obtains the information of an item and some information from the BCODE and LST tables. "}),(0,s.jsx)("td",{children:" ART "}),(0,s.jsx)("td",{children:" XART03 "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "BCODE" : [\n    "XBCODE03"\n  ], \n  "LST":[\n    "XLST10 ",\n    "XLST13 ",\n    "XLST14 ",\n    "XLST15 "\n  ] \n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "LST":[\n    "XLST03 = \'%codLst%\'",\n    "XLST25 = \'%areaListino%\'"\n  ] \n}\n'})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:" FULL_ARTICLE_INFO "}),(0,s.jsx)("td",{children:" Obtains the information of an item and all the data from the tables related to the item. "}),(0,s.jsx)("td",{children:" ART "}),(0,s.jsx)("td",{children:" XART03 "}),(0,s.jsx)("td",{}),(0,s.jsx)("td",{})]})]}),"\n",(0,s.jsx)(n.h2,{id:"query-pre-defined-documents",children:"Query Pre-Defined Documents"}),"\n",(0,s.jsx)(n.p,{children:"Using the documents described in the previous paragraph as a reference, let's see how to call the documents saved in TB_ANAG_DOCDIM00 via API and what return objects are provided."}),"\n",(0,s.jsx)(n.p,{children:"The optional parameters that the service accepts are:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"$top"})," to limit the numbers of records to be returned"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"$offset"})," and ",(0,s.jsx)(n.code,{children:"$num_rows"})," are used to define the number of records to return. If used, the result is an array with the first element being a metadata object containing information about the number of pages, the current page, and the items per page returned."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"debug"})," if true, returns the sql query executed as first element of result array."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"depth"})," defines the recursion depth level possible based on the metadata. The default value is 3 (we can have up to three nested recursion levels)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dim_occurrences"})," is used to prevent infinite loops based on the relationships described in the metadata. The default value is 3 (we can have a dimension at most three times at any depth level; from the fourth level onwards, it will no longer be expanded in detail)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"compact"})," defines the depth level for returning data."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"false = returns the fields of the master dimension and the fields of the related dimensions"}),"\n",(0,s.jsx)(n.li,{children:'true = returns only the columns of the master table\nN.B. compact does not apply to the dimensions defined in "Related Dimensions". These dimensions will always be shown; at most, undesired fields will be hidden, or the obtained results will be filtered.'}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"use_public_code"}),' to obtain the clear descriptions of constant codes (for example, "ArticleCode" instead of "XART03" if these fields are correctly populated).\nIn case the public description is not available, the system returns the code field.']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"center_dett"})," display|new|detail|edit|allviews are the possible values (see Query Data - Request for specific properties section)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"markers"})," if we send the parameter markers=1, the fields of the dimension like ID, CDATA, LDATA, OWNER, and LOWNER are replaced respectively with:\n0, ",(0,s.jsx)(n.strong,{children:"CDATA"}),", ",(0,s.jsx)(n.strong,{children:"LDATA"}),", ",(0,s.jsx)(n.strong,{children:"OWNER"}),", ",(0,s.jsx)(n.strong,{children:"LOWNER"}),"\nThis allows the actualization of these values in case the selected document is used to populate a database (seeds)."]}),"\n",(0,s.jsx)(n.p,{children:"Additionally, there are parameters related to the conditions to be applied to the related dimensions (if present in the form of tokens).\nFor example, if we take the conditions defined in SHORT_ARTICLE_INFO (see previous paragraph), it will be necessary to send the following parameters as query params:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"codLst"})," the list code associated with the store ",(0,s.jsx)(n.strong,{children:"areaListino"})," the list area associated with the store"]}),"\n",(0,s.jsx)(n.p,{children:"N.B. The tokens, if present in the document definition, are MANDATORY! The system responds with a status 500 and a message explaining the error."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "status": 500,\n  "message": "Bad request!, Missing codLst param"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Documento SHORT_ARTICLE_INFO"}),"\n",(0,s.jsx)(n.h5,{id:"request",children:"Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"GET https://app.q01.io/api/v4/document/SHORT_ARTICLE_INFO/300100?compact=false&use_public_code=false&center_dett=dettalgio&codLst=1&areaListino=ITA\n"})}),"\n",(0,s.jsx)(n.h5,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "ART_ID": 1234,\n    "OWNER": "SYS",\n    "CDATA": "20200301082500",\n    "LOWNER": "SYS",\n    "LDATA": "20200301082500",\n    "TIMESTAMP": "1460556321.222",\n    "TREC": "N",\n    "XART01": "2",\n    "XART02": "2",\n    "XART03": "055570",\n    "XART04": "055570",\n    "XART05": "055570",\n    ...\n    ...\n    "XART20": "Spaghetti alla carbonara",\n    "XART21": "10",\n    "XART25": "9.00",\n    ...\n    ...\n    "XART53": "rep1",\n    "XART57": [\n      {\n        "XBCODE03": "05595012"\n      } \n    ],\n    "XART58": [ \n      {\n        "XLST10": 9.00,\n        "XLST13": 10.99,\n        "XLST14": 10.99,\n        "XLST15": 12.99,\n      } \n    ],\n    ... \n    ...\n  }\n]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Documento FULL_ARTICLE_INFO"}),"\n",(0,s.jsx)(n.h5,{id:"request-1",children:"Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"GET https://app.q01.io/api/v4/document/SHORT_ARTICLE_INFO/300100?compact=false&use_public_code=false&center_dett=dettalgio&markers=1\n"})}),"\n",(0,s.jsx)(n.h5,{id:"response-1",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "ART_ID": 0,\n    "OWNER": "__OWNER__",\n    "CDATA": "__CDATA__",\n    "LOWNER": "__LOWNER__",\n    "LDATA": "__LDATA__",\n    "TIMESTAMP": "__TIMESTAMP__",\n    "TREC": "N",\n    "XART01": "2",\n    "XART02": "2",\n    "XART03": "055570",\n    "XART04": "055570",\n    "XART05": "055570",\n    ...\n    ...\n    "XART20": "Spaghetti alla carbonara",\n    "XART21":  {\n      "IVA_ID": 0,\n      "OWNER": "__OWNER__",\n      "CDATA": "__CDATA__",\n      "LOWNER": "__LOWNER__",\n      "LDATA": "__LDATA__",\n      "TIMESTAMP": "__TIMESTAMP__",\n      "XIVA01": "2",\n      "XIVA02": "2",\n      "XIVA03": "10",\n      "XIVA04": "IVA 10%",\n      "XIVA05": "10.00",\n      ...\n      ...\n    },\n    "XART25": "9.00",\n    ...\n    ...\n    "XART53": {\n      "DEPFOOD_ID": 0,\n      "OWNER": "__OWNER__",\n      "CDATA": "__CDATA__",\n      "LOWNER": "__LOWNER__",\n      "LDATA": "__LDATA__",\n      "TIMESTAMP": "__TIMESTAMP__",\n      "XDEPFOOD01": "2",\n      "XDEPFOOD02": "2",\n      "XDEPFOOD03": "rep1",\n      "XDEPFOOD04": "Reparto 1",\n    },\n    "XART57": [\n      {\n        "XBCODE03": "05595012"\n      }\n    ],\n    "XART58": [ \n      {\n        "XLST10": 9.00,\n        "XLST13": 10.99,\n        "XLST14": 10.99,\n        "XLST15": 12.99,\n      } \n    ],\n    ... \n    ...\n  }\n]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Finally, let's see the same call to SHORT_ARTICLE_INFO with the parameter use_public_code=true."}),"\n",(0,s.jsx)(n.h5,{id:"request-2",children:"Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"GET https://app.q01.io/api/v4/document/SHORT_ARTICLE_INFO/300100?compact=false&use_public_code=true&center_dett=dettalgio&codLst=1&areaListino=ITA\n"})}),"\n",(0,s.jsx)(n.h5,{id:"response-2",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "amb": "2",\n    "amb_rif": "2",\n    "progressivoArticolo": "055570",\n    "articoloInterno": "055570",\n    "articoloFornitore": "055570",\n    "descrizione": "Spaghetti alla carbonara",\n    "iva": "10",\n    ...\n    "PrezzoConsigliato": 9.00,\n    ...\n    "Reparto": "rep1",\n    ...\n    "BarcodeAssociati": [\n      {\n        "codiceEan": "05595012"\n      } \n    ],\n    "codiceEan": "05595012",\n    "ListiniAssociati": [\n      {\n        "Prezzo": 9.00,\n        "periodo 1": 10.99,\n        "periodo 2": 10.99,\n        "periodo 3": 12.99\n      } \n    ],\n    ... \n    ...\n  }\n]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"query-documents-onfly",children:"Query Documents onFly"}),"\n",(0,s.jsx)(n.p,{children:"It is possible to obtain documents even without specifying a record in DOCDIM.\nThis is obviously not very useful when there is a need to reuse a document. However, it is very useful when there is a need to make an ad-hoc or highly customized query (for example, constructing the document through a user interface)."}),"\n",(0,s.jsx)(n.p,{children:"The parameters accepted by the service, which uses the POST method, are the same as those previously discussed and are also passed as JSON to the endpoint.\nThe fields that were previously read from the database in the TB_ANAG_DOCDIM00 dimension are also sent in the JSON.\nAdditionally, the conditions to be applied to the related dimensions are not passed as query param arguments but directly in the body."}),"\n",(0,s.jsx)(n.p,{children:"Let's look at an example of an on-the-fly document that returns the same data described in the SHORT_ARTICLE_INFO document."}),"\n",(0,s.jsx)(n.h5,{id:"request-3",children:"Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'POST https://app.q01.io/api/v4/document\n{\n  "dim": "ART",\n  "val_key": "055570",\n  // It is possible to replace "val_key" with "list_val_keys" to obtain an array of documents.\n  //"list_val_keys": [\n  // "055570",\n  //  "055570",\n  //],\n  // Or alternatively, use a filter to obtain an array of documents.\n  //"filter_val_key": "contains(XART20,\'MELIN\') OR equals(XART03,\'534508\')",\n  "related_dim": {\n    "BCODE": [\n      "XBCODE03"\n    ], \n    "LST":[\n      "XLST10",\n      "XLST13",\n      "XLST14",\n      "XLST15"\n    ]\n  },\n  "related_dim_condition": {\n    "LST":[\n      "XLST03 = \'1\'",\n      "XLST25 = \'ITA\'"\n    ]\n  },\n  "compact": true,\n  "use_public_code": false,\n  "center_dett": "allviews",\n  "$offset": "all",\n}\n'})}),"\n",(0,s.jsx)(n.h5,{id:"response-3",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "XART01": "2",\n    "XART02": "2",\n    "XART03": "055570",\n    "XART04": "055570",\n    "XART05": "055570",\n    ...\n    ...\n    "XART20": "Spaghetti alla carbonara",\n    "XART21": "10",\n    "XART25": "9.00",\n    ...\n    ...\n    "XART53": "rep1",\n    "XART57": [\n      {\n        "XBCODE03": "05595012"\n      }\n    ],\n    "XART58": [\n      {\n        "XLST10": 9.00,\n        "XLST13": 10.99,\n        "XLST14": 10.99,\n        "XLST15": 12.99,      \n      }\n    ]\n  }\n]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Here are some other useful examples."}),"\n",(0,s.jsx)(n.h5,{id:"request-4",children:"Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'POST https://app.q01.io/api/v4/document\n\n{\n    "dim": "GALLERYEVT",\n    "key": "1",\n    "filter_val_key": "XGALLERYEVT03 eq 1", \n    "compact": false,\n    "use_public_code": false,\n    "center_dett": "allviews",\n    "debug": true,\n    "depth": 3,\n    "dim_occurrences": 3,\n    "markers": 0\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'POST https://app.q01.io/api/v4/document\n\n{\n    "dim": "GALLERYEVT",\n    "key": "1", // key is required, but value isn\'t important... \n    "filter_val_key": "XGALLERYEVT03 eq 1", \n    "compact": false,\n    "use_public_code": true,\n    "center_dett": "allviews",\n    "debug": true,\n    "depth": 3,\n    "dim_occurrences": 3,\n    "$offset": 0,\n    "$num_rows": "25",\n    "markers": 0\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'POST https://app.q01.io/api/v4/document\n\n{\n    "dim": "KUBEMICROSERV",\n    "key": "1",\n    "filter_val_key": "equals(XKUBEMICROSERV05,\'msdevops\')", \n    "compact": false,\n    "use_public_code": false,\n    "center_dett": "allviews",\n    "debug": true,\n    "depth": 5,\n    "dim_occurrences": 3\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>o});var s=t(1504);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);